#!/usr/bin/php -q
<?php

function usage() {
  print "Usage: ".$argv[0]." </path/to/repository>\n";
}

if( empty($argv[1]) ) {
  usage();
  exit( 0 );
}

$repoPath = $argv[1];
if( !is_dir($repoPath) ) {
  print "Supplied repository path '".$repoPath."' is not a directory !\n";
  exit( 1 );
}

$repoLabel = $argv[2];

$dir = opendir($repoPath);
if( $dir === FALSE ) {
  print "Error opening directory '".$repoPath."'\n";
  exit( 1 );
}

$contentxml = new DOMDocument();
$contentxml->formatOutput = true;

$repoNode = new DOMElement('repo');
$contentxml->appendChild($repoNode);
if( $repoLabel !== false ) {
  $repoNode->setAttribute('label', $repoLabel);
}

$modulesNode = new DOMElement('modules');
$repoNode->appendChild($modulesNode);

while( ($file = readdir($dir)) !== FALSE ) {
  if( ! is_file($repoPath.'/'.$file) ) {
    continue;
  }
  if( ! preg_match('/\.webinst$/', $file) ) {
    continue;
  }
  $cmd = "tar -zxOf ".escapeshellcmd($repoPath.'/'.$file)." info.xml 2> /dev/null";
  $tar = popen($cmd, "r");
  if( $tar === FALSE ) {
    print "Error running '".$cmd."'\n";
    exit( 2 );
  }
  $info = '';
  while( ($data = fgets($tar)) !== FALSE ) {
    $info .= $data;
  }
  fclose($tar);
  if( $info == '' ) {
    print "Empty or non-existing 'info.xml' file found in package '".$file."'.\n";
    continue;
  }

  $ret = process_info($contentxml, $modulesNode, $info, $file);
  if( $ret === FALSE ) {
    print "Error processing file '".$repoPath.'/'.$file."' !\n";
    exit( 3 );
  }
}

closedir($dir);

$temp = tempnam($repoPath, "tmp.content.xml");
if( $temp === FALSE ) {
  print "Error creating temporary content.xml file !\n";
  exit( 4 );
}

$fh = fopen($temp, "w");
if( $fh === FALSE ) {
  print "Error opening temp file '".$temp."' for writing !\n";
  exit( 4 );
}

$ret = fwrite($fh, $contentxml->saveXML());
if( $ret === FALSE ) {
  print "Error writing to temp file '".$temp."' !\n";
  exit( 4 );
}

fclose($fh);

$ret = chmod($temp, 0644);
if( $ret === FALSE ) {
  print "Error chmoding temp file '".$temp."' !\n";
  exit( 4 );
}

$ret = rename($temp, $repoPath.'/content.xml');
if( $ret === FALSE ) {
  print "Error renaming temp file '".$temp."' to '".$repoPath."/content.xml' !\n";
  exit( 4 );
}

exit( 0 );

function process_info(&$parentDocument, &$parentNode, $info, $file) {
  $infoxml = new DOMDocument();
  $ret = $infoxml->loadXML($info);
  if( $ret === FALSE ) {
    print "Error loading XML content !\n";
    return FALSE;
  }
  $nodeList = $infoxml->childNodes;
  if( $nodeList->length <= 0 ) {
    print "XML root node contains no childs !\n";
    return FALSE;
  }
  if( $nodeList->length > 1 ) {
    print "More than one child in XML root node !\n";
    return FALSE;
  }

  $node = $nodeList->item(0);
  $node->setAttribute('src', $file);

  $xpath = new DOMXpath($infoxml);
  $childs = $xpath->query('/module/*');

  $i = 0;
  while( $i < $childs->length ) {
    $child = $childs->item($i);
    if( $child->nodeName != "description" && $child->nodeName != "requires" && $child->nodeName != "changelog" ) {
      $node->removeChild($child);
    }
    $i++;
  }

  $newNode = $parentDocument->importNode($node, TRUE);
  $parentNode->appendChild($newNode);

  return TRUE;
}

?>